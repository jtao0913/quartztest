/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cnipr.cniprgz.struts.action;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.util.UUID;

import org.apache.struts2.ServletActionContext;

import com.cnipr.cniprgz.commons.SendMail;
import com.cnipr.cniprgz.commons.SetupAccess;
import com.cnipr.cniprgz.commons.SetupConstant;
import com.cnipr.cniprgz.entity.IprUser;
import com.cnipr.cniprgz.func.MenuFunc;
import com.cnipr.cniprgz.func.SysUserFunc;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;

import net.jbase.common.util.security.MD5;

/**
 * MyEclipse Struts Creation date: 05-04-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/login" name="loginForm" input="/index.jsp"
 *                scope="request" validate="true"
 * @struts.action-forward name="success" path="/jsp/zljs/index.jsp"
 * @struts.action-forward name="fail" path="/index.jsp"
 */
public class RegisterAction extends ActionSupport {
	// private ActionContext context;
	// private Map request;
	// private Map session;
	// private Map application;

	private static final long serialVersionUID = -4155976036348014552L;

	// sysUserFunc
	public SysUserFunc sysUserFunc;

	public SysUserFunc getSysUserFunc() {
		return sysUserFunc;
	}

	public void setSysUserFunc(SysUserFunc sysUserFunc) {
		this.sysUserFunc = sysUserFunc;
	}

	private IprUser user;

	public IprUser getUser() {
		return user;
	}

	public void setUser(IprUser user) {
		this.user = user;
	}

/*	private String username;

	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}*/

	public void setPassword(String password) {
		this.password = password;
	}

	public String getPassword() {
		return password;
	}

	private String password;

	private String email;

	private String username;
	public void setUsername(String username) {
		this.username = username;
	}
	public String getUsername() {
		return username;
	}
	
	private String realname;

	public String getRealname() {
		return realname;
	}

	public void setRealname(String realname) {
		this.realname = realname;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String register() {
		String ret = SUCCESS;
		String codeUrl = UUID.randomUUID().toString();
		ActionContext cxt = ActionContext.getContext();
		Map<String, Object> application = cxt.getApplication();
		
		HttpServletRequest request = (HttpServletRequest) cxt.get(ServletActionContext.HTTP_REQUEST);
		HttpServletResponse response = (HttpServletResponse) cxt.get(ServletActionContext.HTTP_RESPONSE);
		HttpSession session = request.getSession();

		String website_title = (application.get("website_title") == null || application.get("website_title").equals(""))
				? "综合信平台息服务"
				: (String) application.get("website_title");

		String path = request.getContextPath();
		String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path
				+ "/";

		username = request.getParameter("username");
		realname = request.getParameter("realname");
		password = request.getParameter("password");
		email = request.getParameter("email");

		String verifycode = request.getParameter("verifycode");
		String verifyCode = (String) session.getAttribute("verifyCode");
		
		String regex = "^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$";
		if(email!=null) {
			boolean flag = email.matches(regex);
			if(!flag) {
				jsonresult = "请正确输入邮箱";
				ret = SUCCESS;
				return ret;
			}
		}else {
			jsonresult = "请正确输入邮箱";
			ret = SUCCESS;
			return ret;
		}
		
		if (!verifycode.equals(verifyCode)) {
			jsonresult = "验证码错误，请重新输入";
			ret = SUCCESS;
		} else {
			realname = com.cnipph.util.Util.unescape(realname);
			// System.out.println("username=" + username);
			// System.out.println("password=" + password);
			/*
			 * String remoteAddr = com.cnipr.cniprgz.commons.Common.getRemoteAddr(request);
			 * 
			 * if(SetupAccess.getProperty(SetupConstant.IPLIMIT).equals("1")) { String
			 * ipsegment = SetupAccess.getProperty("ipsegment");
			 * if(ipsegment!=null&&!ipsegment.trim().equals("")){ String[] arrIP =
			 * ipsegment.split(",");
			 * 
			 * for(int i=0;i<arrIP.length;i++){ if(arrIP[i].endsWith(remoteAddr)){
			 * jsonresult = "error##您的IP不在允许范围内，不能登录系统"; ret = ERROR; return ret; } } } }
			 */
			
			int valid = sysUserFunc.validUseremail(email);
			int isuser=sysUserFunc.validUsername(username, email);
			
			if (valid == 0&&isuser==0) {
				int userid = sysUserFunc.newUser_inactivate(username,realname, password, email);

				String today = sysUserFunc.getToday();

				// 请点击此链接激活您的用户

				// 欢迎您加入ITeye网站！
				// 您的ITeye账号已经成功创建，请点击此链接激活账号：

				String emailcontent = basePath + "activateuser.do?id=" + userid + "&checkCode="
						+ generateCheckcode(realname, today);

				emailcontent = "欢迎您加入专利搜索分析引擎！\r\n" + "您的账号已经成功创建，请点击此链接激活账号：\r\n" + emailcontent;

				SendMail sendmail = new SendMail();
				sendmail.sendSimpleEmail("这是一封激活账号的邮件，复制链接到地址栏来激活他", emailcontent, email);

				// jsonresult = "success##请到邮箱中激活您的帐户";
				jsonresult = "请到邮箱中激活您的帐户";
			} else if (valid == 1) {
//				jsonresult = "您输入的用户名已存在，请重新注册";
				jsonresult = "您输入的邮箱地址已存在，请重新注册";
			}else if (isuser==1) {
				jsonresult = "您输入的用户名已存在，请重新注册";
			}
/*			else if (valid == 2) {
				jsonresult = "您输入的邮箱地址已存在，请重新注册";
			}*/

		}
		return ret;
	}
	
	public String callbackpassword() {
		String ret = SUCCESS;
		String codeUrl = UUID.randomUUID().toString();
		ActionContext cxt = ActionContext.getContext();
//		Map<String, Object> application = cxt.getApplication();

		HttpServletRequest request = (HttpServletRequest) cxt.get(ServletActionContext.HTTP_REQUEST);
		HttpServletResponse response = (HttpServletResponse) cxt.get(ServletActionContext.HTTP_RESPONSE);
		HttpSession session = request.getSession();

//		String website_title = (application.get("website_title") == null || application.get("website_title").equals(""))
//				? "综合信平台息服务"
//				: (String) application.get("website_title");

//		String path = request.getContextPath();
//		String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path + "/";

//		username = request.getParameter("username");
//		password = request.getParameter("password");
		email = request.getParameter("email");

		String verifycode = request.getParameter("verifycode");
		String verifyCode = (String) session.getAttribute("verifyCode");

		if (!verifycode.equalsIgnoreCase(verifyCode)) {
			jsonresult = "验证码错误，请重新输入";
			ret = SUCCESS;
		} else {

//			username = com.cnipph.util.Util.unescape(username);

			// System.out.println("username=" + username);
			// System.out.println("password=" + password);

			/*
			 * String remoteAddr = com.cnipr.cniprgz.commons.Common.getRemoteAddr(request);
			 * 
			 * if(SetupAccess.getProperty(SetupConstant.IPLIMIT).equals("1")) { String
			 * ipsegment = SetupAccess.getProperty("ipsegment");
			 * if(ipsegment!=null&&!ipsegment.trim().equals("")){ String[] arrIP =
			 * ipsegment.split(",");
			 * 
			 * for(int i=0;i<arrIP.length;i++){ if(arrIP[i].endsWith(remoteAddr)){
			 * jsonresult = "error##您的IP不在允许范围内，不能登录系统"; ret = ERROR; return ret; } } } }
			 */
			String newpw = "";
			int valid = sysUserFunc.validUseremail(email);
			if (valid == 1) 
			{
				newpw = sysUserFunc.reInitPassword(email);
//				请点击此链接激活您的用户

				// 欢迎您加入ITeye网站！
				// 您的ITeye账号已经成功创建，请点击此链接激活账号：

//				String emailcontent = basePath + "activateuser.do?id=" + userid + "&checkCode="
//						+ generateCheckcode(username, today);
//				emailcontent = "欢迎您加入专利搜索分析引擎！\r\n" + "您的账号已经成功创建，请点击此链接激活账号：\r\n" + emailcontent;

				String emailcontent = "您的登录密码已经改为"+newpw+"，欢迎您继续使用";
				
				SendMail sendmail = new SendMail();
				sendmail.sendSimpleEmail("这是一封找回密码的邮件", emailcontent, email);

				// jsonresult = "success##请到邮箱中激活您的帐户";
				jsonresult = "请到邮箱中找回您的新密码";
			}else {
				jsonresult = "没有此用户，请注册";
			}

		}
		return ret;
	}

	public static String generateCheckcode(String username, String today) {
//		MD5 md5 = new MD5();
		return MD5.md5(username + "-" + today);
	}

	private String jsonresult;

	public String getJsonresult() {
		return jsonresult;
	}

	public void setJsonresult(String jsonresult) {
		this.jsonresult = jsonresult;
	}

	private MenuFunc menuFunc;

	public void setMenuFunc(MenuFunc menuFunc) {
		this.menuFunc = menuFunc;
	}

}
